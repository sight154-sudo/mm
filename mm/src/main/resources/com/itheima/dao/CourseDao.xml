<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.CourseDao">
    <!--配置实体类属性和数据库表中列的对应关系-->
    <resultMap id="BaseResultMap" autoMapping="true" type="com.itheima.domain.Course">
        <id column="id" property="id"/>
        <result column="create_time" property="createTime"></result>
    </resultMap>


    <sql id="Base_Column_List">
        id,name,remark,state,create_time
    </sql>

    <!--配置查询所有，带条件-->
    <select id="findAll" resultMap="BaseResultMap">
        select 
            <include refid="Base_Column_List"></include>
        from st_course
    </select>

    <!--配置根据ID查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from st_course
        where id = #{id}
    </select>

    <!--配置根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from st_course where id = #{id}
    </delete>

    <!--配置全字段插入，当某个字段没有值时，插入null-->
    <insert id="save" parameterType="com.itheima.domain.Course">
        insert into st_course (id,name,remark,state,create_time)
        values (#{id}, #{name}, #{remark},
                #{state}, #{createTime})
    </insert>

    <!--配置全字段更新，当提供的数据为null时，数据库数据会被更新为null-->
    <update id="update" parameterType="com.itheima.domain.Course">
        update st_course
        set name = #{name},
            remark = #{remark},
            state = #{state}
        where id = #{id}
    </update>
</mapper>